openapi: 3.0.0
info:
  version: 1.0.0
  title: Base-Slim-Skeleton
  description: Structure de base d'un api créé dans le cadre du cours Services Web H2022

servers:
  - url: http://localhost/base-slim-skeleton
paths:
  /:
    get:
      tags:
        - Général
      summary: Message de bienvenue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                example:
                  success: true
                  message : 'Hello world!'

  /users:
    post:
      tags:
        - Usagers
      summary: Création d'un usager.
      requestBody:
        description: Les informations de l'usager à créer
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
              example:
                username : 'mathF'
                first_name: 'Mathieu'
                last_name: 'Fréchette'
                email: 'frechette.mathieu@cegepvicto.ca'
      responses:
        '201':
          description: Le id de l'usager créé
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                example:
                  id : 1
    put:
      tags:
        - Usagers
      summary: Modification d'un usager.
      requestBody:
        description: Les informations de l'usager à modifier
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
              example:
                id : '1'
                username : 'mathF'
                first_name: 'Mathieu'
                last_name: 'Fréchette'
                email: 'frechette.mathieu@cegepvicto.ca'
      responses:
        '200':
          description: La ressource est modifiée et est retournée dans la réponse.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                example:
                  id : 1
    get:
      tags :
        - Usagers
      summary: Recevoir tous les usagers
      responses:
        '200':
          description: OK
  /users/{userId}:
    get:
      tags:
        - Usagers
      summary: Recevoir un usager correspondant à un id
      parameters:
        - name: userId
          in: path
          required: true
          description: Le id de l'usager à recevoir.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Usagers
      summary: Supprimer un usager
      parameters:
        - name: userId
          in: path
          required: true
          description: Le id de l'usager à supprimer.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
